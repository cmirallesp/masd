plans:
  B(role(Role));
  @env(enterMarket(Role), _);

beliefs:
  stock(Type, Stock):- findall(1, have(_, Type, _), List), length(List, Stock).
  % Product types
  type(smartphone1).
  type(smartphone2).
  type(smartphone3).
  type(smartwatch).
  type(tablet).
  type(console1).
  type(console2).
  type(console3).
  type(console4).
  money(0).
  recommendedPrice(Type, Qlty, Price):- type(Type), x(Type, X),
                                        is(Price, int(X*(5.0+Qlty)/10.0)).
  % True with a certain probability. Useful to let some decisions to randomness.
  roll(Probability):- is(X, random(1)), X =< Probability.
  enoughMoney(Price):- money(Money), Money >= Price.
  
beliefupdates:
  % money: update money quantity
  { money(OldQty) } UpdateMoney(Qty) { not money(OldQty), money(Qty) }
  { not(have(ProductId, _, _)) } AddItem(ProductId, Type, Quality) {have(ProductId, Type, Quality)}
  { have(ProductId, Type, Quality) } RemoveItem(ProductId) { not have(ProductId, Type, Quality) }

pcrules:
  event(name(Name), env) <- true | {
    +name(Name);
  }

  event(updateMoney(Qty), env) <- true | {
    UpdateMoney(Qty);
  }

  wait(Cycles) <- true |
  {
    if (B(Cycles > 0)) {
      B(is(Cycles1, Cycles -1));
      wait(Cycles1);
    }
  }

